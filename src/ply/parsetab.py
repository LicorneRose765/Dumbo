
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMADD AND ASSIGN CLOSING COMMA DIV DO DOT ENDFOR ENDIF EQ FALSE FOR GT IF IN INTEGER LPAREN LT MUL NE OPENING OR PRINT RPAREN SEMICOLON STRING SUB TRUE TXT VARIABLE\n    BOOLEAN_EXPRESSION : BOOLEAN BOOLEAN_OPERATOR BOOLEAN\n    \n    MATH_EXPRESSION : MATH_EXPRESSION ADD TERM\n    \n    MATH_EXPRESSION : MATH_EXPRESSION SUB TERM\n    \n    BOOLEAN_EXPRESSION : BOOLEAN\n    \n    MATH_EXPRESSION : TERM\n    \n    STRING_LIST_INTERIOR : STRING COMMA STRING_LIST_INTERIOR\n    \n    BOOLEAN : TRUE\n            | FALSE\n    \n    TERM : TERM MUL FACTOR\n    \n    STRING_LIST_INTERIOR : STRING\n    \n    BOOLEAN_OPERATOR : AND\n    \n    TERM : TERM DIV FACTOR\n    \n    BOOLEAN_OPERATOR : OR\n    \n    TERM : FACTOR\n    \n    STRING_LIST : LPAREN STRING_LIST_INTERIOR RPAREN\n    \n    BOOLEAN_EXPRESSION : MATH_EXPRESSION INTEGER_COMPARATOR MATH_EXPRESSION\n    \n    FACTOR : INTEGER\n    \n    EXPRESSION : VARIABLE ASSIGN STRING_EXPRESSION\n               | VARIABLE ASSIGN STRING_LIST\n               | VARIABLE ASSIGN MATH_EXPRESSION\n               | VARIABLE ASSIGN BOOLEAN_EXPRESSION\n    \n    INTEGER_COMPARATOR : LT\n                       | GT\n                       | EQ\n                       | NE\n    \n    STRING_EXPRESSION : STRING_EXPRESSION DOT STRING_EXPRESSION\n    \n    STRING_EXPRESSION : STRING\n    \n    STRING_EXPRESSION : VARIABLE\n    \n    EXPRESSION : FOR VARIABLE IN STRING_LIST DO EXPRESSION_LIST ENDFOR\n    \n    EXPRESSION : FOR VARIABLE IN VARIABLE DO EXPRESSION_LIST ENDFOR\n    \n    EXPRESSION : PRINT STRING_EXPRESSION\n    \n    EXPRESSION : MATH_EXPRESSION\n    \n    EXPRESSION : BOOLEAN_EXPRESSION\n    \n    EXPRESSION : IF_EXPRESSION\n    \n    DUMBO_BLOCK : OPENING EXPRESSION_LIST CLOSING\n    \n    EXPRESSION_LIST : EXPRESSION SEMICOLON\n    \n    EXPRESSION_LIST : EXPRESSION SEMICOLON EXPRESSION_LIST\n    \n    PROGRAM : DUMBO_BLOCK PROGRAM\n            | TXT PROGRAM\n    \n    PROGRAM : DUMBO_BLOCK\n            | TXT\n    \n    IF_EXPRESSION : IF BOOLEAN_EXPRESSION DO EXPRESSION_LIST ENDIF\n    '
    
_lr_action_items = {'TXT':([0,2,3,22,],[3,3,3,-35,]),'OPENING':([0,2,3,22,],[4,4,4,-35,]),'$end':([1,2,3,5,6,22,],[0,-40,-41,-38,-39,-35,]),'VARIABLE':([4,12,13,23,24,52,53,57,66,67,],[9,32,35,9,35,60,35,9,9,9,]),'FOR':([4,23,57,66,67,],[12,12,12,12,12,]),'PRINT':([4,23,57,66,67,],[13,13,13,13,13,]),'IF':([4,23,57,66,67,],[17,17,17,17,17,]),'TRUE':([4,17,23,24,38,39,40,57,66,67,],[19,19,19,19,19,-11,-13,19,19,19,]),'FALSE':([4,17,23,24,38,39,40,57,66,67,],[20,20,20,20,20,-11,-13,20,20,20,]),'INTEGER':([4,17,23,24,25,26,27,28,29,30,31,36,37,57,66,67,],[21,21,21,21,21,21,21,-22,-23,-24,-25,21,21,21,21,21,]),'CLOSING':([7,23,43,],[22,-36,-37,]),'SEMICOLON':([8,10,11,14,15,16,18,19,20,21,33,34,35,44,45,46,47,49,50,51,54,55,56,62,64,68,72,73,],[23,-32,-33,-34,-5,-4,-14,-7,-8,-17,-31,-27,-28,-18,-19,-20,-21,-2,-3,-16,-9,-12,-1,-26,-15,-42,-30,-29,]),'ASSIGN':([9,],[24,]),'ADD':([10,15,18,21,42,46,49,50,51,54,55,],[25,-5,-14,-17,25,25,-2,-3,25,-9,-12,]),'SUB':([10,15,18,21,42,46,49,50,51,54,55,],[26,-5,-14,-17,26,26,-2,-3,26,-9,-12,]),'LT':([10,15,18,21,42,46,49,50,54,55,],[28,-5,-14,-17,28,28,-2,-3,-9,-12,]),'GT':([10,15,18,21,42,46,49,50,54,55,],[29,-5,-14,-17,29,29,-2,-3,-9,-12,]),'EQ':([10,15,18,21,42,46,49,50,54,55,],[30,-5,-14,-17,30,30,-2,-3,-9,-12,]),'NE':([10,15,18,21,42,46,49,50,54,55,],[31,-5,-14,-17,31,31,-2,-3,-9,-12,]),'STRING':([13,24,48,53,65,],[34,34,59,34,59,]),'DO':([15,16,18,19,20,21,41,49,50,51,54,55,56,60,61,64,],[-5,-4,-14,-7,-8,-17,57,-2,-3,-16,-9,-12,-1,66,67,-15,]),'MUL':([15,18,21,49,50,54,55,],[36,-14,-17,36,36,-9,-12,]),'DIV':([15,18,21,49,50,54,55,],[37,-14,-17,37,37,-9,-12,]),'AND':([16,19,20,],[39,-7,-8,]),'OR':([16,19,20,],[40,-7,-8,]),'ENDIF':([23,43,63,],[-36,-37,68,]),'ENDFOR':([23,43,70,71,],[-36,-37,72,73,]),'LPAREN':([24,52,],[48,48,]),'IN':([32,],[52,]),'DOT':([33,34,35,44,62,],[53,-27,-28,53,53,]),'RPAREN':([58,59,69,],[64,-10,-6,]),'COMMA':([59,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,2,3,],[1,5,6,]),'DUMBO_BLOCK':([0,2,3,],[2,2,2,]),'EXPRESSION_LIST':([4,23,57,66,67,],[7,43,63,70,71,]),'EXPRESSION':([4,23,57,66,67,],[8,8,8,8,8,]),'MATH_EXPRESSION':([4,17,23,24,27,57,66,67,],[10,42,10,46,51,10,10,10,]),'BOOLEAN_EXPRESSION':([4,17,23,24,57,66,67,],[11,41,11,47,11,11,11,]),'IF_EXPRESSION':([4,23,57,66,67,],[14,14,14,14,14,]),'TERM':([4,17,23,24,25,26,27,57,66,67,],[15,15,15,15,49,50,15,15,15,15,]),'BOOLEAN':([4,17,23,24,38,57,66,67,],[16,16,16,16,56,16,16,16,]),'FACTOR':([4,17,23,24,25,26,27,36,37,57,66,67,],[18,18,18,18,18,18,18,54,55,18,18,18,]),'INTEGER_COMPARATOR':([10,42,46,],[27,27,27,]),'STRING_EXPRESSION':([13,24,53,],[33,44,62,]),'BOOLEAN_OPERATOR':([16,],[38,]),'STRING_LIST':([24,52,],[45,61,]),'STRING_LIST_INTERIOR':([48,65,],[58,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('BOOLEAN_EXPRESSION -> BOOLEAN BOOLEAN_OPERATOR BOOLEAN','BOOLEAN_EXPRESSION',3,'p_IN_booleanexpression','bool.py',6),
  ('MATH_EXPRESSION -> MATH_EXPRESSION ADD TERM','MATH_EXPRESSION',3,'p_IN_mathexpression_plus','math.py',6),
  ('MATH_EXPRESSION -> MATH_EXPRESSION SUB TERM','MATH_EXPRESSION',3,'p_IN_mathexpression_minus','math.py',13),
  ('BOOLEAN_EXPRESSION -> BOOLEAN','BOOLEAN_EXPRESSION',1,'p_IN_booleanexpression_simple','bool.py',19),
  ('MATH_EXPRESSION -> TERM','MATH_EXPRESSION',1,'p_IN_mathexpression_TERM','math.py',20),
  ('STRING_LIST_INTERIOR -> STRING COMMA STRING_LIST_INTERIOR','STRING_LIST_INTERIOR',3,'p_stringlistinterior_double','base.py',23),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_IN_boolean','bool.py',26),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_IN_boolean','bool.py',27),
  ('TERM -> TERM MUL FACTOR','TERM',3,'p_IN_term_times','math.py',27),
  ('STRING_LIST_INTERIOR -> STRING','STRING_LIST_INTERIOR',1,'p_stringlistinterior_single','base.py',34),
  ('BOOLEAN_OPERATOR -> AND','BOOLEAN_OPERATOR',1,'p_IN_booleanoperator_and','bool.py',34),
  ('TERM -> TERM DIV FACTOR','TERM',3,'p_IN_term_div','math.py',34),
  ('BOOLEAN_OPERATOR -> OR','BOOLEAN_OPERATOR',1,'p_IN_booleanoperator_or','bool.py',41),
  ('TERM -> FACTOR','TERM',1,'p_IN_term_factor','math.py',41),
  ('STRING_LIST -> LPAREN STRING_LIST_INTERIOR RPAREN','STRING_LIST',3,'p_stringlist','base.py',43),
  ('BOOLEAN_EXPRESSION -> MATH_EXPRESSION INTEGER_COMPARATOR MATH_EXPRESSION','BOOLEAN_EXPRESSION',3,'p_IN_integercomparison','bool.py',48),
  ('FACTOR -> INTEGER','FACTOR',1,'p_IN_factor_num','math.py',48),
  ('EXPRESSION -> VARIABLE ASSIGN STRING_EXPRESSION','EXPRESSION',3,'p_expression_assignments','base.py',52),
  ('EXPRESSION -> VARIABLE ASSIGN STRING_LIST','EXPRESSION',3,'p_expression_assignments','base.py',53),
  ('EXPRESSION -> VARIABLE ASSIGN MATH_EXPRESSION','EXPRESSION',3,'p_expression_assignments','base.py',54),
  ('EXPRESSION -> VARIABLE ASSIGN BOOLEAN_EXPRESSION','EXPRESSION',3,'p_expression_assignments','base.py',55),
  ('INTEGER_COMPARATOR -> LT','INTEGER_COMPARATOR',1,'p_IN_integercomparator','bool.py',65),
  ('INTEGER_COMPARATOR -> GT','INTEGER_COMPARATOR',1,'p_IN_integercomparator','bool.py',66),
  ('INTEGER_COMPARATOR -> EQ','INTEGER_COMPARATOR',1,'p_IN_integercomparator','bool.py',67),
  ('INTEGER_COMPARATOR -> NE','INTEGER_COMPARATOR',1,'p_IN_integercomparator','bool.py',68),
  ('STRING_EXPRESSION -> STRING_EXPRESSION DOT STRING_EXPRESSION','STRING_EXPRESSION',3,'p_stringexpression_double','base.py',67),
  ('STRING_EXPRESSION -> STRING','STRING_EXPRESSION',1,'p_string_expression_string','base.py',76),
  ('STRING_EXPRESSION -> VARIABLE','STRING_EXPRESSION',1,'p_string_expression_variable','base.py',85),
  ('EXPRESSION -> FOR VARIABLE IN STRING_LIST DO EXPRESSION_LIST ENDFOR','EXPRESSION',7,'p_expression_strlistfor','base.py',100),
  ('EXPRESSION -> FOR VARIABLE IN VARIABLE DO EXPRESSION_LIST ENDFOR','EXPRESSION',7,'p_expression_varfor','base.py',108),
  ('EXPRESSION -> PRINT STRING_EXPRESSION','EXPRESSION',2,'p_expression_print','base.py',116),
  ('EXPRESSION -> MATH_EXPRESSION','EXPRESSION',1,'p_expression_mathexpression','base.py',125),
  ('EXPRESSION -> BOOLEAN_EXPRESSION','EXPRESSION',1,'p_expression_booleanexpression','base.py',134),
  ('EXPRESSION -> IF_EXPRESSION','EXPRESSION',1,'p_expression_ifexpression','base.py',143),
  ('DUMBO_BLOCK -> OPENING EXPRESSION_LIST CLOSING','DUMBO_BLOCK',3,'p_dumboblock','base.py',152),
  ('EXPRESSION_LIST -> EXPRESSION SEMICOLON','EXPRESSION_LIST',2,'p_expression_list_single','base.py',161),
  ('EXPRESSION_LIST -> EXPRESSION SEMICOLON EXPRESSION_LIST','EXPRESSION_LIST',3,'p_expression_list_multiple','base.py',170),
  ('PROGRAM -> DUMBO_BLOCK PROGRAM','PROGRAM',2,'p_program_double','base.py',179),
  ('PROGRAM -> TXT PROGRAM','PROGRAM',2,'p_program_double','base.py',180),
  ('PROGRAM -> DUMBO_BLOCK','PROGRAM',1,'p_program_single','base.py',189),
  ('PROGRAM -> TXT','PROGRAM',1,'p_program_single','base.py',190),
  ('IF_EXPRESSION -> IF BOOLEAN_EXPRESSION DO EXPRESSION_LIST ENDIF','IF_EXPRESSION',5,'p_IN_ifexpression','base.py',199),
]
