Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    ENDFOR
    EXPRESSION
    FOR
    IN
    PRINT
    STRING_EXPRESSION
    STRING_LIST
    STRING_LIST_INTERIOR
    VARIABLE

Grammar

Rule 0     S' -> PROGRAM
Rule 1     DUMBO_BLOCK -> OPENING STRING CLOSING
Rule 2     EXPRESSION_LIST -> STRING STRING STRING
Rule 3     PROGRAM -> TXT PROGRAM
Rule 4     PROGRAM -> DUMBO_BLOCK PROGRAM
Rule 5     PROGRAM -> TXT
Rule 6     PROGRAM -> DUMBO_BLOCK

Terminals, with rules where they appear

CLOSING              : 1
DO                   : 
ENDFOR               : 
EXPRESSION           : 
FOR                  : 
IN                   : 
OPENING              : 1
PRINT                : 
STRING               : 1 2 2 2
STRING_EXPRESSION    : 
STRING_LIST          : 
STRING_LIST_INTERIOR : 
TXT                  : 3 5
VARIABLE             : 
error                : 

Nonterminals, with rules where they appear

DUMBO_BLOCK          : 4 6
EXPRESSION_LIST      : 
PROGRAM              : 3 4 0

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (3) PROGRAM -> . TXT PROGRAM
    (4) PROGRAM -> . DUMBO_BLOCK PROGRAM
    (5) PROGRAM -> . TXT
    (6) PROGRAM -> . DUMBO_BLOCK
    (1) DUMBO_BLOCK -> . OPENING STRING CLOSING

    TXT             shift and go to state 2
    OPENING         shift and go to state 4

    PROGRAM                        shift and go to state 1
    DUMBO_BLOCK                    shift and go to state 3

state 1

    (0) S' -> PROGRAM .



state 2

    (3) PROGRAM -> TXT . PROGRAM
    (5) PROGRAM -> TXT .
    (3) PROGRAM -> . TXT PROGRAM
    (4) PROGRAM -> . DUMBO_BLOCK PROGRAM
    (5) PROGRAM -> . TXT
    (6) PROGRAM -> . DUMBO_BLOCK
    (1) DUMBO_BLOCK -> . OPENING STRING CLOSING

    $end            reduce using rule 5 (PROGRAM -> TXT .)
    TXT             shift and go to state 2
    OPENING         shift and go to state 4

    PROGRAM                        shift and go to state 5
    DUMBO_BLOCK                    shift and go to state 3

state 3

    (4) PROGRAM -> DUMBO_BLOCK . PROGRAM
    (6) PROGRAM -> DUMBO_BLOCK .
    (3) PROGRAM -> . TXT PROGRAM
    (4) PROGRAM -> . DUMBO_BLOCK PROGRAM
    (5) PROGRAM -> . TXT
    (6) PROGRAM -> . DUMBO_BLOCK
    (1) DUMBO_BLOCK -> . OPENING STRING CLOSING

    $end            reduce using rule 6 (PROGRAM -> DUMBO_BLOCK .)
    TXT             shift and go to state 2
    OPENING         shift and go to state 4

    DUMBO_BLOCK                    shift and go to state 3
    PROGRAM                        shift and go to state 6

state 4

    (1) DUMBO_BLOCK -> OPENING . STRING CLOSING

    STRING          shift and go to state 7


state 5

    (3) PROGRAM -> TXT PROGRAM .

    $end            reduce using rule 3 (PROGRAM -> TXT PROGRAM .)


state 6

    (4) PROGRAM -> DUMBO_BLOCK PROGRAM .

    $end            reduce using rule 4 (PROGRAM -> DUMBO_BLOCK PROGRAM .)


state 7

    (1) DUMBO_BLOCK -> OPENING STRING . CLOSING

    CLOSING         shift and go to state 8


state 8

    (1) DUMBO_BLOCK -> OPENING STRING CLOSING .

    TXT             reduce using rule 1 (DUMBO_BLOCK -> OPENING STRING CLOSING .)
    OPENING         reduce using rule 1 (DUMBO_BLOCK -> OPENING STRING CLOSING .)
    $end            reduce using rule 1 (DUMBO_BLOCK -> OPENING STRING CLOSING .)

